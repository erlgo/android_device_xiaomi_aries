# Bluetooth executables and scripts
type bluetooth_loader, domain;
type bluetooth_loader_exec, exec_type, file_type;

# Start bdAddrLoader from init
init_daemon_domain(bluetooth_loader)

# Run init.aries.bt.sh
allow bluetooth_loader shell_exec:file { entrypoint read };
allow bluetooth_loader bluetooth_loader_exec:file { getattr open execute_no_trans };

# init.aries.bt.sh needs /system/bin/log access
allow bluetooth_loader devpts:chr_file rw_file_perms;

# Run hci_qcomm_init from init.aries.bt.sh
domain_auto_trans(bluetooth_loader, hci_attach_exec, hci_attach)
allow hci_attach bluetooth_loader:fd use;

# Read mac address from persist partition
allow bluetooth_loader persist_file:dir search;
r_dir_file(bluetooth_loader, persist_bluetooth_file)

# Talk to init over the property socket
unix_socket_connect(bluetooth_loader, property, init)
# Set persist.service.bdroid.* and bluetooth.* property values
allow bluetooth_loader bluetooth_prop:property_service set;

# Allow getprop/setprop for init.aries.bt.sh
allow bluetooth_loader system_file:file execute_no_trans;

# Allow to talk to qmuxd
allow bluetooth_loader qmux:unix_stream_socket connectto;
allow bluetooth_loader qmuxd_socket:dir { write add_name search };
allow bluetooth_loader qmuxd_socket:sock_file { write create setattr };

# Allow to talk to ourself
allow bluetooth_loader self:socket { read ioctl create };

allow bluetooth_loader self:process execmem;
allow hci_attach self:process execmem;
